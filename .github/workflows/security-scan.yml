# .github/workflows/security-scan.yml
name: Seguridad CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Preparar carpeta de resultados
        run: mkdir -p results

      - id: skims
        name: Escaneo SAST con Skims
        continue-on-error: true
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            fluidattacks/cli:latest \
            skims --strict scan skims-config.yml


      - id: npm_audit
        name: Escaneo SCA con npm audit
        continue-on-error: true
        run: |
          sudo apt-get update && sudo apt-get install -y jq

          npm install --package-lock-only --ignore-scripts

          mkdir -p results
          npm audit --json > results/npm-audit.json || AUDIT_EXIT=$?

          jq -r '
            .vulnerabilities
            | to_entries[]
            | . as $entry
            | ($entry.value.via
               | map(select(type=="object"))
               | first // {}) as $adv
            | [
                $entry.key,
                $entry.value.severity,
                ($adv.title // ""),
                ($adv.url   // "")
              ]
            | @csv
          ' results/npm-audit.json > results/npm-audit-report.csv

          if [[ "$AUDIT_EXIT" != "" ]]; then exit 1; fi


      - name: Verificar CSV de npm audit
        if: always()
        run: |
          echo "🚀 Contenido de results/:"
          ls -l results
          echo "⏺ Primeras líneas de npm-audit-report.csv:"
          head -n 5 results/npm-audit-report.csv || echo "(vacío o no existe)"

      - name: Subir reportes de seguridad
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: results/*.csv

      - name: Comprobar vulnerabilidades y fallar build
        if: always()
        run: |
          if [[ "${{ steps.skims.outcome }}"  == "failure" ]] \
          || [[ "${{ steps.npm_audit.outcome }}" == "failure" ]]; then
            echo "::error::Se detectaron vulnerabilidades (Skims=${{ steps.skims.outcome }}, npm_audit=${{ steps.npm_audit.outcome }})"
            exit 1
          fi

